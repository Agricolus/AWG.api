version: "3.5"
services:
  dbpg:
    image: postgres
    restart: always
    container_name: awg-postgres
    hostname: dbpg
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5002:5432"
    networks:
      awgapinet:
        ipv4_address: 172.28.1.1
    volumes:
      - postres-db:/var/lib/postgresql/data

  wilma:
    image: fiware/pep-proxy:8.3.0
    restart: always
    container_name: awg-wilma
    depends_on:
      - awg-api
    ports:
      - "81:80"
    environment:
      - DEBUG=pep-proxy:*
      - PEP_PROXY_PORT=80
      - PEP_PROXY_HTTPS_ENABLED=false
      - PEP_PROXY_IDM_HOST=fiware-keyrock
      - PEP_PROXY_IDM_PORT=3000
      - PEP_PROXY_IDM_SSL_ENABLED=false
      - PEP_PROXY_APP_HOST=awg-api
      - PEP_PROXY_APP_PORT=80
      - PEP_PROXY_APP_ID=f9272ff7-c088-44ea-8527-37bf53e24000
      - PEP_PROXY_USERNAME=pep_proxy_90915e46-3a28-42ec-b369-1f57386b4f9b
      - PEP_PASSWORD=pep_proxy_8f42cedd-67f8-4f87-bcec-32e164220946
      - PEP_TOKEN_SECRET=2d912a50d1db0ecb
      - PEP_PROXY_AUTH_ENABLED=true
      - PEP_PROXY_PDP=idm
    networks:
      awgnet:
      awgapinet:
        ipv4_address: 172.28.1.2

  awg-api:
    image: awg:api
    depends_on:
      - dbpg
    restart: always
    hostname: awgapi
    container_name: awg-api
    build:
      context: .
      dockerfile: ./Dockerfile
    expose:
      - "5000"
    volumes:
      - ./appsettings.json:/AWGAPI/appsettings.json
    networks:
      awgnet:
      awgapinet:
        ipv4_address: 172.28.1.3

networks:
  awgnet:
    external: true
  awgapinet:
    name: awgapinet
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  postres-db: ~