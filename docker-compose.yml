version: "3.5"
services:
  dbpg:
    image: postgres
    restart: always
    container_name: awg-postgres
    hostname: dbpg
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    networks:
      awgapinet:
        ipv4_address: 172.28.1.1

  wilma:
    image: fiware/pep-proxy
    restart: always
    container_name: awg-wilma
    depends_on:
      - awg-api
    ports:
      - "81:80"
      - "444:443"
    environment:
      - PEP_PROXY_HTTPS_ENABLED=false
      - PEP_PROXY_IDM_HOST=192.168.1.181
      - PEP_PROXY_IDM_PORT=3000
      - PEP_PROXY_IDM_SSL_ENABLED=false
      - PEP_PROXY_APP_HOST=172.28.1.3
      - PEP_PROXY_APP_PORT=80
      - PEP_PROXY_APP_ID=177fa598-ca68-4541-81b7-35545eed320b
      - PEP_PROXY_USERNAME=pep_proxy_3fd73d1c-c5d3-4166-902f-2cc17abe6627
      - PEP_PASSWORD=pep_proxy_9a87f110-2463-43f1-8709-a113176f8956
      - PEP_PROXY_AUTH_ENABLED=true
      - PEP_PROXY_PDP=idm
    networks:
      awgapinet:
        ipv4_address: 172.28.1.2

  awg-api:
    image: awg:api
    depends_on:
      - dbpg
    restart: always
    hostname: awgapi
    container_name: awg-api
    build:
      context: .
      dockerfile: ./Dockerfile
    # ports:
    #   - "5001:5000"
    volumes:
      - ./appsettings.json:/AWGAPI/out/appsettings.json
    networks:
      awgapinet:
        ipv4_address: 172.28.1.3

networks:
  awgapinet:
    name: awgapinet
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
