// <auto-generated />
using System;
using AWG.Stations.handlers.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AWG.Stations.handlers.Migrations.MySql
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20200219120333_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AWG.Stations.handlers.Model.Station", b =>
                {
                    b.Property<long>("_internalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double?>("BatteryLevel")
                        .HasColumnType("double");

                    b.Property<string>("CategorySerialized")
                        .HasColumnName("Category")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ConfigurationSerialized")
                        .HasColumnName("Configuration")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ControlledAssetSerialized")
                        .HasColumnName("ControlledAsset")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ControlledPropertySerialized")
                        .HasColumnName("ControlledProperty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DataProvider")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateFirstUsed")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateInstalled")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateLastCalibration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateLastValueReported")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateManufactured")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DeviceState")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HardwareVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("IpAddressSerialized")
                        .HasColumnName("IpAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("LocationSerialized")
                        .HasColumnName("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("MacAddressSerialized")
                        .HasColumnName("MacAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mcc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mnc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("OsVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OwnerSerialized")
                        .HasColumnName("Owner")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderSerialized")
                        .HasColumnName("Provider")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RefDeviceModel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("Rssi")
                        .HasColumnType("double");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Source")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupportedProtocolSerialized")
                        .HasColumnName("SupportedProtocol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("_internalId");

                    b.HasIndex("Id")
                        .HasName("station_unique");

                    b.ToTable("Stations");
                });
#pragma warning restore 612, 618
        }
    }
}
