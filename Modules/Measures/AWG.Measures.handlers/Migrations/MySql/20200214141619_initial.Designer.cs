// <auto-generated />
using System;
using AWG.Measures.handlers.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AWG.Measures.handlers.Migrations.MySql
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20200214141619_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AWG.Measures.handlers.Model.WeatherObserved", b =>
                {
                    b.Property<long>("_internalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AddressSerialized")
                        .HasColumnName("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("AtmosphericPressure")
                        .HasColumnType("double");

                    b.Property<string>("DataProvider")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateObserved")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("DewPoint")
                        .HasColumnType("double");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<double?>("Illuminance")
                        .HasColumnType("double");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("LocationSerialized")
                        .HasColumnName("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<double?>("Precipitation")
                        .HasColumnType("double");

                    b.Property<int?>("PressureTendency")
                        .HasColumnType("int");

                    b.Property<string>("RefDevice")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RefPointOfInterest")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("RelativeHumidity")
                        .HasColumnType("double");

                    b.Property<double?>("SnowHeight")
                        .HasColumnType("double");

                    b.Property<double?>("SolarRadiation")
                        .HasColumnType("double");

                    b.Property<string>("Source")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("StreamGauge")
                        .HasColumnType("double");

                    b.Property<double?>("Temperature")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("Visibility")
                        .HasColumnType("int");

                    b.Property<int?>("WeatherType")
                        .HasColumnType("int");

                    b.Property<double?>("WindDirection")
                        .HasColumnType("double");

                    b.Property<double?>("WindSpeed")
                        .HasColumnType("double");

                    b.HasKey("_internalId");

                    b.HasIndex("RefDevice", "DateObserved")
                        .HasName("weather_date");

                    b.HasIndex("RefDevice", "Id")
                        .HasName("weather_unique");

                    b.ToTable("WeatherObserved");
                });
#pragma warning restore 612, 618
        }
    }
}
